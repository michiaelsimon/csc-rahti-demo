apiVersion: apps/v1
kind: Deployment
metadata:
  name: csc-rahti-demo
  labels:
    app: csc-rahti-demo
    version: v1
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app: csc-rahti-demo
  template:
    metadata:
      labels:
        app: csc-rahti-demo
        version: v1
    spec:
      # Security context for Rahti compatibility - let OpenShift assign user ID
      securityContext:
        runAsNonRoot: true
        # Remove runAsUser and fsGroup - let OpenShift assign them automatically
      containers:
      - name: csc-rahti-demo
        image: image-registry.openshift-image-registry.svc:5000/week4/csc-rahti-demo:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        # Environment variables
        env:
        - name: FLASK_ENV
          value: "production"
        - name: PORT
          value: "8080"
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: app-secrets
              key: secret-key
              optional: true
        # Resource limits and requests
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        # Health checks
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        # Security context for container - let OpenShift assign user ID
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false
          runAsNonRoot: true
          capabilities:
            drop:
            - ALL
        # Volume mounts (if needed)
        volumeMounts:
        - name: temp-storage
          mountPath: /tmp
      volumes:
      - name: temp-storage
        emptyDir: {}
      # Restart policy
      restartPolicy: Always
